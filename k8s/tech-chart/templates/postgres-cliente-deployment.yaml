apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.postgresCliente.name }}
spec:
  replicas: {{ .Values.postgresCliente.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.postgresCliente.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.postgresCliente.name }}
    spec:
      containers:
        - name: {{ .Values.postgresCliente.name }}
          image: "{{ .Values.postgresCliente.image.repository }}:{{ .Values.postgresCliente.image.tag }}"
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresCliente.env.user.secretKeyRef.name }}
                  key: {{ .Values.postgresCliente.env.user.secretKeyRef.key }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresCliente.env.password.secretKeyRef.name }}
                  key: {{ .Values.postgresCliente.env.password.secretKeyRef.key }}
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.postgresCliente.env.db.configMapKeyRef.name }}
                  key: {{ .Values.postgresCliente.env.db.configMapKeyRef.key }}
          ports:
            - containerPort: {{ .Values.postgresCliente.service.port }}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-cliente-storage
      volumes:
        - name: postgres-cliente-storage
          persistentVolumeClaim:
            claimName: {{ .Values.postgresCliente.pvc.name }}